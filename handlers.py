from telebot import types
from config import ANIMALS_DATA, ORDER_DATA
from utils import save_order_to_csv
import re

ADMIN_CHAT_ID = 1128870853


def display_animal_info_handler(call, bot):
    animal = ANIMALS_DATA[call.data]
    if animal["current_jiliks"] >= animal["total_jiliks"]:
        full_message = (
            f"ü•© *{animal['name']}*\n"
            "–¢–æ–ª—ã“õ –º”©–ª—à–µ—Ä –∂–∏–Ω–∞–ª–¥—ã, –º–∞–ª–¥—ã —Å–æ–π—ã–ø –∂—ñ–ª—ñ–∫—Ç–µ–ø –±–æ–ª“ì–∞–Ω —Å–æ“£ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–º—ã–∑.\n"
            "–ï–≥–µ—Ä —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞–Ω –±–∞—Å —Ç–∞—Ä—Ç—É “õ–∞–∂–µ—Ç –±–æ–ª—Å–∞, –∫“Ø–Ω–Ω—ñ“£ —Å–æ“£—ã–Ω–∞ –¥–µ–π—ñ–Ω –æ—Å—ã –Ω”©–º—ñ—Ä–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑: +77007700370\n"
            "–ñ–∞“£–∞–¥–∞–Ω –º–∞–ª —Å–∞—Ç—ã–ª—ã–º“ì–∞ —à—ã“õ“õ–∞–Ω–¥–∞ —Ö–∞–±–∞—Ä–ª–∞–π–º—ã–∑."
        )
        bot.send_photo(
            call.message.chat.id,
            animal["full_image_url"],
            caption=full_message,
            parse_mode="Markdown",
        )
    else:
        available_jiliks = animal["total_jiliks"] - animal["current_jiliks"]
        animal_info = (
            f"ü•© *{animal['name']}*\n"
            f"1 –∂—ñ–ª—ñ–∫—Ç—ñ“£ –±–∞“ì–∞—Å—ã —à–∞–º–∞–º–µ–Ω 50,000 KZT\n"
            f"“ö–∞–∑—ñ—Ä *{animal['current_jiliks']}* –∂—ñ–ª—ñ–∫ –∂–∏–Ω–∞–ª–¥—ã\n"
            f"–ë—ñ—Ä *{animal['name']}* —Ç–æ–ª—É “Ø—à—ñ–Ω *{available_jiliks}* –∂—ñ–ª—ñ–∫ “õ–∞–ª–¥—ã\n"
        )

        markup = types.InlineKeyboardMarkup()
        btn_contribute = types.InlineKeyboardButton(
            "–¢–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä—É", callback_data=f"contribute_{call.data}"
        )
        markup.add(btn_contribute)

        bot.send_photo(
            call.message.chat.id,
            animal["image_url"],
            caption=animal_info,
            parse_mode="Markdown",
            reply_markup=markup,
        )


def ask_contribution_handler(call, bot):
    animal_key = call.data.split("_")[1]
    if (
        ANIMALS_DATA[animal_key]["current_jiliks"]
        >= ANIMALS_DATA[animal_key]["total_jiliks"]
    ):
        full_message = (
            f"ü•© *{ANIMALS_DATA[animal_key]['name']}*\n"
            "–¢–æ–ª—ã“õ –º”©–ª—à–µ—Ä –∂–∏–Ω–∞–ª–¥—ã, –º–∞–ª–¥—ã —Å–æ–π—ã–ø –∂—ñ–ª—ñ–∫—Ç–µ–ø –±–æ–ª“ì–∞–Ω —Å–æ“£ —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–≥–µ–Ω –∫—ñ—Å—ñ–ª–µ—Ä–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–º—ã–∑.\n"
            "–ï–≥–µ—Ä —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞–Ω –±–∞—Å —Ç–∞—Ä—Ç—É “õ–∞–∂–µ—Ç –±–æ–ª—Å–∞, –∫“Ø–Ω–Ω—ñ“£ —Å–æ“£—ã–Ω–∞ –¥–µ–π—ñ–Ω –æ—Å—ã –Ω”©–º—ñ—Ä–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑: +77007700370\n"
            "–ñ–∞“£–∞–¥–∞–Ω –º–∞–ª —Å–∞—Ç—ã–ª—ã–º“ì–∞ —à—ã“õ“õ–∞–Ω–¥–∞ —Ö–∞–±–∞—Ä–ª–∞–π–º—ã–∑."
        )
        bot.send_photo(
            call.message.chat.id,
            ANIMALS_DATA[animal_key]["full_image_url"],
            caption=full_message,
            parse_mode="Markdown",
        )
        show_main_menu(call.message.chat.id, bot)
    else:
        msg = bot.send_message(
            call.message.chat.id,
            f"“ö–∞–Ω—à–∞ –∂—ñ–ª—ñ–∫ {ANIMALS_DATA[animal_key]['name']} –µ—Ç—ñ–Ω –∞–ª“ì—ã“£—ã–∑ –∫–µ–ª–µ–¥—ñ? (1-{ANIMALS_DATA[animal_key]['total_jiliks'] - ANIMALS_DATA[animal_key]['current_jiliks']})",
        )
        bot.register_next_step_handler(msg, ask_confirmation_handler, animal_key, bot)


def ask_confirmation_handler(message, animal_key, bot):
    try:
        jiliks = int(message.text)
        if jiliks <= 0 or jiliks > 12:
            raise ValueError(
                f"–ñ—ñ–ª—ñ–∫ —Å–∞–Ω—ã 1 –º–µ–Ω {ANIMALS_DATA[animal_key]['total_jiliks'] - ANIMALS_DATA[animal_key]['current_jiliks']} –∞—Ä–∞—Å—ã–Ω–¥–∞ –±–æ–ª—É—ã –∫–µ—Ä–µ–∫."
            )

        total_price = jiliks * 50000
        if (
            jiliks + ANIMALS_DATA[animal_key]["current_jiliks"]
            > ANIMALS_DATA[animal_key]["total_jiliks"]
        ):
            markup = types.InlineKeyboardMarkup()
            btn_main_menu = types.InlineKeyboardButton(
                "–ë–∞—Å –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É", callback_data="main_menu"
            )
            markup.add(btn_main_menu)
            msg = bot.send_message(
                message.chat.id,
                f"–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞–∑—ñ—Ä —Ç–µ–∫ {ANIMALS_DATA[animal_key]['total_jiliks'] - ANIMALS_DATA[animal_key]['current_jiliks']} –∂—ñ–ª—ñ–∫ “õ–æ—Å–∞ –∞–ª–∞—Å—ã–∑.",
                reply_markup=markup,
            )
            bot.register_next_step_handler(
                msg, ask_confirmation_handler, animal_key, bot
            )
            return

        ORDER_DATA[message.chat.id] = {
            "animal_key": animal_key,
            "jiliks": jiliks,
            "total_price": total_price,
        }
        markup = types.InlineKeyboardMarkup()
        btn_confirm = types.InlineKeyboardButton(
            "–†–∞—Å—Ç–∞—É", callback_data=f"confirm_{animal_key}_{jiliks}"
        )
        btn_cancel = types.InlineKeyboardButton("–ë–∞—Å —Ç–∞—Ä—Ç—É", callback_data="cancel")
        markup.add(btn_confirm, btn_cancel)

        bot.send_message(
            message.chat.id,
            f"–°—ñ–∑ {jiliks} –∂—ñ–ª—ñ–∫ {ANIMALS_DATA[animal_key]['name']} –µ—Ç—ñ–Ω –∞–ª—É“ì–∞ —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–¥—ñ“£—ñ–∑. –†–∞—Å—Ç–∞–π—Å—ã–∑ –±–∞?\n–ñ–∞–ª–ø—ã –±–∞“ì–∞—Å—ã: {total_price} KZT",
            reply_markup=markup,
        )
    except ValueError:
        markup = types.InlineKeyboardMarkup()
        btn_main_menu = types.InlineKeyboardButton(
            "–ë–∞—Å –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É", callback_data="main_menu"
        )
        markup.add(btn_main_menu)
        msg = bot.send_message(
            message.chat.id,
            f"–ñ—ñ–ª—ñ–∫ —Å–∞–Ω—ã–Ω –¥“±—Ä—ã—Å –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (1-{ANIMALS_DATA[animal_key]['total_jiliks'] - ANIMALS_DATA[animal_key]['current_jiliks']}) –Ω–µ–º–µ—Å–µ –∞–ª–¥—ã“£“ì—ã –º”ô–∑—ñ—Ä–≥–µ “õ–∞–π—Ç—ã“£—ã–∑.",
            reply_markup=markup,
        )
        bot.register_next_step_handler(msg, ask_confirmation_handler, animal_key, bot)


def handle_contribution_handler(call, bot):
    try:
        data = call.data.split("_")
        animal_key = data[1]
        jiliks = int(data[2])
        total_price = jiliks * 50000  # Fix the total_price definition here

        ORDER_DATA[call.message.chat.id].update({"confirmed": True})

        msg = bot.send_message(
            call.message.chat.id, "–ö”©–ø —Ä–∞—Ö–º–µ—Ç! \n–°—ñ–∑–¥—ñ“£ –µ—Å—ñ–º—ñ“£—ñ–∑ –∫—ñ–º:"
        )
        bot.register_next_step_handler(
            msg, get_name_handler, animal_key, jiliks, bot, total_price
        )
    except Exception as e:
        bot.send_message(call.message.chat.id, f"–ë—ñ—Ä –∂–µ—Ä–¥–µ “õ–∞—Ç–µ –±–æ–ª–¥—ã: {str(e)}")
        show_main_menu(call.message.chat.id, bot)


def get_name_handler(message, animal_key, jiliks, bot, total_price):
    ORDER_DATA[message.chat.id]["name"] = message.text
    msg = bot.send_message(message.chat.id, "–°—ñ–∑–≥–µ “õ–∞–π –Ω”©–º—ñ—Ä–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–π—ã“õ:")
    bot.register_next_step_handler(
        msg, get_phone_handler, animal_key, jiliks, bot, total_price
    )


def get_phone_handler(message, animal_key, jiliks, bot, total_price):
    phone_number = message.text
    if not re.match(r"^\+?\d{10,15}$", phone_number):
        msg = bot.send_message(
            message.chat.id,
            "–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ –¥“±—Ä—ã—Å –µ–º–µ—Å. –î“±—Ä—ã—Å —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—É “õ–∞–∂–µ—Ç (10-15 —Å–∞–Ω, '+': –±–µ–ª–≥—ñ—Å—ñ–º–µ–Ω –±–∞—Å—Ç–∞—É“ì–∞ –±–æ–ª–∞–¥—ã):",
        )
        bot.register_next_step_handler(
            msg, get_phone_handler, animal_key, jiliks, bot, total_price
        )
    else:
        ORDER_DATA[message.chat.id]["phone"] = phone_number
        msg = bot.send_message(
            message.chat.id,
            "–ú–µ–∫–µ–Ω–∂–∞–π—ã“£—ã–∑–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (2GIS –Ω–µ–º–µ—Å–µ Google Maps —Å—ñ–ª—Ç–µ–º–µ—Å—ñ):",
        )
        bot.register_next_step_handler(
            msg, get_address_handler, animal_key, jiliks, bot, total_price
        )


def get_address_handler(message, animal_key, jiliks, bot, total_price):
    try:
        address = message.text
        url_pattern = re.compile(
            r"(https:\/\/2gis\.kz\/geo\/|https:\/\/2gis\.kz\/|https:\/\/go\.2gis\.com\/|https:\/\/maps\.app\.goo\.gl\/|https:\/\/www\.google\.com\/maps\/|https:\/\/goo\.gl\/maps\/|https:\/\/maps\.google\.com\/)",
            re.IGNORECASE,
        )
        if not url_pattern.search(address):
            msg = bot.send_message(
                message.chat.id,
                "–°—ñ–ª—Ç–µ–º–µ –¥“±—Ä—ã—Å –µ–º–µ—Å. –î“±—Ä—ã—Å 2GIS –Ω–µ–º–µ—Å–µ Google Maps —Å—ñ–ª—Ç–µ–º–µ—Å—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑:",
            )
            bot.register_next_step_handler(
                msg, get_address_handler, animal_key, jiliks, bot, total_price
            )
        else:
            ORDER_DATA[message.chat.id]["address"] = address
            save_order_to_csv(message.chat.id)

            ANIMALS_DATA[animal_key]["current_jiliks"] += jiliks
            if (
                ANIMALS_DATA[animal_key]["current_jiliks"]
                >= ANIMALS_DATA[animal_key]["total_jiliks"]
            ):
                ANIMALS_DATA[animal_key]["current_jiliks"] = ANIMALS_DATA[animal_key][
                    "total_jiliks"
                ]
                full_message = (
                    f"ü•© *{ANIMALS_DATA[animal_key]['name']}*\n"
                    "–¢–æ–ª—ã“õ –º”©–ª—à–µ—Ä –∂–∏–Ω–∞–ª–¥—ã, –º–∞–ª–¥—ã —Å–æ–π—ã–ø –∂—ñ–ª—ñ–∫—Ç–µ–ø –±–æ–ª“ì–∞–Ω —Å–æ“£ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–º—ã–∑.\n"
                    "–ñ–∞“£–∞–¥–∞–Ω –º–∞–ª —Å–∞—Ç—ã–ª—ã–º“ì–∞ —à—ã“õ“õ–∞–Ω–¥–∞ —Ö–∞–±–∞—Ä–ª–∞–π–º—ã–∑."
                )
                bot.send_photo(
                    message.chat.id,
                    ANIMALS_DATA[animal_key]["full_image_url"],
                    caption=full_message,
                    parse_mode="Markdown",
                )
            else:
                animal = ANIMALS_DATA[animal_key]
                available_jiliks = animal["total_jiliks"] - animal["current_jiliks"]
                animal_info = (
                    "–ë—ñ–∑–≥–µ —Å–µ–Ω—ñ–º –∞—Ä—Ç—ã–ø —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–≥–µ–Ω—ñ“£—ñ–∑–≥–µ –∫”©–ø —Ä–∞—Ö–º–µ—Ç! \n\n"
                    "“ö–∞–∂–µ—Ç—Ç—ñ –∞–¥–∞–º —Å–∞–Ω—ã –∂–∏–Ω–∞–ª“ì–∞–Ω —Å–æ“£ –µ—Ç—Ç—ñ –∞–¥–∞–ª —Å–æ–π—ã–ø, –∂—ñ–ª—ñ–∫—Ç–µ–ø –±–æ–ª“ì–∞–Ω —Å–æ“£ —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–º—ã–∑.\n\n"
                    f"“ö–∞–∑—ñ—Ä *{animal['current_jiliks']}* –∂—ñ–ª—ñ–∫ –∂–∏–Ω–∞–ª–¥—ã\n"
                    f"–ë—ñ—Ä *{animal['name']}* —Ç–æ–ª—É “Ø—à—ñ–Ω *{available_jiliks}* –∂—ñ–ª—ñ–∫ “õ–∞–ª–¥—ã\n"
                )

                bot.send_photo(
                    message.chat.id,
                    animal["image_url"],
                    caption=animal_info,
                    parse_mode="Markdown",
                )

            send_update_to_all_users(
                animal_key, jiliks, bot, exclude_id=message.chat.id
            )

            show_main_menu(message.chat.id, bot)

            bot.send_message(
                ADMIN_CHAT_ID,
                f"–ñ–∞“£–∞ —Ç–∞–ø—Å—ã—Ä—ã—Å “õ–∞–±—ã–ª–¥–∞–Ω–¥—ã! {jiliks} –∂—ñ–ª—ñ–∫ {ANIMALS_DATA[animal_key]['name']}.\n"
                f"–ñ–∞–ª–ø—ã –±–∞“ì–∞—Å—ã: {total_price} KZT\n"
                f"–ï—Å—ñ–º—ñ: {ORDER_DATA[message.chat.id]['name']}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ: {ORDER_DATA[message.chat.id]['phone']}\n"
                f"–ú–µ–∫–µ–Ω–∂–∞–π—ã: {ORDER_DATA[message.chat.id]['address']}\n",
            )
    except Exception as e:
        bot.send_message(message.chat.id, f"–ë—ñ—Ä –∂–µ—Ä–¥–µ “õ–∞—Ç–µ –±–æ–ª–¥—ã: {str(e)}")
        show_main_menu(message.chat.id, bot)


def send_update_to_all_users(animal_key, jiliks, bot, exclude_id=None):
    for chat_id in ORDER_DATA:
        if ORDER_DATA[chat_id]["animal_key"] == animal_key and chat_id != exclude_id:
            bot.send_message(
                chat_id,
                f"–ñ–∞“£–∞ –∂—ñ–ª—ñ–∫ “õ–æ—Å—ã–ª–¥—ã! “ö–∞–∑—ñ—Ä {ANIMALS_DATA[animal_key]['current_jiliks']} –∂—ñ–ª—ñ–∫ –∂–∏–Ω–∞–ª–¥—ã. –ë—ñ—Ä {ANIMALS_DATA[animal_key]['name']} —Ç–æ–ª—É “Ø—à—ñ–Ω {ANIMALS_DATA[animal_key]['total_jiliks'] - ANIMALS_DATA[animal_key]['current_jiliks']} –∂—ñ–ª—ñ–∫ “õ–∞–ª–¥—ã.\n–î–æ—Å—Ç–∞—Ä—ã“£—ã–∑“ì–∞ –∞–π—Ç—ã“£—ã–∑, —Ç–µ–∑ —Ç–æ–ª—Å—ã–Ω!",
            )


def cancel_contribution_handler(call, bot):
    if call.message.chat.id in ORDER_DATA:
        del ORDER_DATA[call.message.chat.id]
    show_main_menu(call.message.chat.id, bot)


def show_main_menu(chat_id, bot):
    bot.send_message(chat_id, "–ë–∞—Å –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É “Ø—à—ñ–Ω /start –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑.")
